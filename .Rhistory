countries.of.the.world
cfw
library(readr)
cfw <- read_csv("cfw.csv")
View(cfw)
cfw
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
cfw
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
install.packages(c("bslib", "cachem", "callr", "curl", "data.table", "dbplyr", "digest", "farver", "fastmap", "fs", "future", "future.apply", "ggplot2", "globals", "gtable", "htmltools", "knitr", "munsell", "openssl", "parallelly", "processx", "ragg", "rmarkdown", "rstudioapi", "sass", "stringi", "systemfonts", "tidyselect", "tinytex", "xfun"))
datos <- fix_factors(datos, k=15)
d
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
table(datos$region)
descriptive(datos)
mean(datos$population[datos$region %in% "oceania"])
mean(datos$population[datos$region %in% "oceania"])
library(clickR)
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
table(datos$region)
descriptive(datos)
mean(datos$population[datos$region %in% "oceania"])
mean(datos$population[datos$region %in% "oceania"])
datos$region_agrupada <- factor(ifelse(datos$region %in% c("asia (ex. near east)", "near east", "c.w. of ind. states"), "asia",
ifelse(datos$region %in% c("western europe", "baltics", "eastern europe"), "europe",
ifelse(datos$region %in% c("latin amer. & carib", "northern america"), "america",
ifelse(datos$region %in% c("northern africa", "sub-saharan africa"), "africa",
ifelse(datos$region %in% "oceania", "oceania", NA))))))
mpoceania <- mean(datos$population[datos$region %in% "oceania"])
mpasia <- mean(datos$population[datos$region_agrupada %in% "asia"])
mpafrica <- mean(datos$population[datos$region_agrupada %in% "africa"])
mpeurope <- mean(datos$population[datos$region_agrupada %in% "europe"])
mpamerica <- mean(datos$population[datos$region_agrupada %in% "america"])
barplot(sort(table(datos$region_agrupada)), xlab="population", las=1, horiz = TRUE, xlim=c(0, 60) )
datos$region_agrupada_mean <- ('mpoceania')
mFC <- datos$region_agrupada_mean
mFC
class(mFC)
datos$region_agrupada_mean <- mpoceania,mpasia,mpafrica,mpeurope,mpamerica
datos$region_agrupada_mean <- mpoceania, mpasia, mpafrica, mpeurope, mpamerica
datos$region_agrupada_mean <- "mpoceania", "mpasia", "mpafrica", "mpeurope", "mpamerica"
mFC <- datos$region_agrupada_mean
barplot(sort(table(datos$region_agrupada)), xlab="population", las=1, horiz = TRUE, xlim=c(0, 60) )
datos$region_agrupada_mean
d=data.frame(name=character(0),mean=numeric(0))
d=edit(d)
d
d
View(d)
View(d)
mpoceania
d=data.frame(name=character(0),mean=numeric(0))
d=edit(d)
View(d)
View(d)
View(d)
View(d)
d=edit(d)
View(d)
mpasia
d=edit(d)
mpafrica
d=edit(d)
mpamerica
mpamerica
mpeurope
d
barplot(table(d),xlab = "pop",las=1,horiz = TRUE, xlim = c(0,10))
d
barplot(table(d),xlab = "pop",las=2,horiz = TRUE, xlim = c(0,10))
barplot(table(d),xlab = "pop",las=3,horiz = TRUE, xlim = c(0,10))
barplot(table(d),xlab = "pop",las=1,horiz = TRUE, xlim = c(0,10))
d
barplot(sort(table(d)), xlab = "pop", las=1, horiz = FALSE, xlim = c(0,10))
barplot(sort(table(d)), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
barplot(sort(table(d)), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,30))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
d
datos$region_agrupada <- factor(ifelse(datos$region %in% c("asia (ex. near east)", "near east", "c.w. of ind. states"), "asia",
ifelse(datos$region %in% c("western europe", "baltics", "eastern europe"), "europe",
ifelse(datos$region %in% c("latin amer. & carib", "northern america"), "america",
ifelse(datos$region %in% c("northern africa", "sub-saharan africa"), "africa",
ifelse(datos$region %in% "oceania", "oceania", NA))))))
mpoceania <- mean(datos$population[datos$region %in% "oceania"])
mpoceania <- mean(datos$population[datos$region %in% "oceania"])
mpasia <- mean(datos$population[datos$region_agrupada %in% "asia"])
mpafrica <- mean(datos$population[datos$region_agrupada %in% "africa"])
mpeurope <- mean(datos$population[datos$region_agrupada %in% "europe"])
mpamerica <- mean(datos$population[datos$region_agrupada %in% "america"])
datos$region_agrupada
str(datos$region_agrupada)
str(datos)
d
barplot(table(d), xlab = d$mean, las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), x = d$mean, las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), x = d$mean, las=3, horiz = TRUE, xlim = c(0,5))
barplot(sort(table(datos$region_agrupada)), xlab="population", las=1, horiz = TRUE, xlim=c(0, 60) )
barplot(table(d), x = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d$name), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d$name,d$mean), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d$name), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(sort(table(d)), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,5))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(1,10))
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
medias
barplot(sort(table(datos$region_agrupada)), xlab="population", las=1, horiz = TRUE, xlim=c(0, 60) )
barplot(sort(table(datos$region_agrupada)), xlab="population", las=1, horiz = TRUE, xlim=c(0, 70) )
d
barplot(table(d), xlab = "pop", las=1, horiz = TRUE, xlim = c(0,10))
cfw
library(clickR)
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
table(datos$region)
descriptive(datos)
mean(datos$population[datos$region %in% "oceania"])
mean(datos$population[datos$region %in% "oceania"])
datos$region_agrupada <- factor(ifelse(datos$region %in% c("asia (ex. near east)", "near east", "c.w. of ind. states"), "asia",
ifelse(datos$region %in% c("western europe", "baltics", "eastern europe"), "europe",
ifelse(datos$region %in% c("latin amer. & carib", "northern america"), "america",
ifelse(datos$region %in% c("northern africa", "sub-saharan africa"), "africa",
ifelse(datos$region %in% "oceania", "oceania", NA))))))
mpoceania <- mean(datos$population[datos$region %in% "oceania"])
mpasia <- mean(datos$population[datos$region_agrupada %in% "asia"])
mpafrica <- mean(datos$population[datos$region_agrupada %in% "africa"])
mpeurope <- mean(datos$population[datos$region_agrupada %in% "europe"])
mpamerica <- mean(datos$population[datos$region_agrupada %in% "america"])
anova <- aov(population ~ region_agrupada data = datos)
anova <- aov(population ~ region_agrupada, data = datos)
summary(anova)
str(datos)
anova <- aov(population ~ area_sq_mi, data = datos)
summary(anova)
anova2 <- oneway.test(natality ~ mortality, data = datos)
anova2 <- oneway.test(Phones ~ mortality, data = datos)
anova2 <- oneway.test(phones ~ mortality, data = datos)
anova2 <- oneway.test(country ~ mortality, data = datos)
anova2 <- oneway.test(arable ~ crops, data = datos)
descriptive(datos)
cfw
library(clickR)
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
table(datos$region)
descriptive(datos)
mean(datos$population[datos$region %in% "oceania"])
datos$region_agrupada <- factor(ifelse(datos$region %in% c("asia (ex. near east)", "near east", "c.w. of ind. states"), "asia",
ifelse(datos$region %in% c("western europe", "baltics", "eastern europe"), "europe",
ifelse(datos$region %in% c("latin amer. & carib", "northern america"), "america",
ifelse(datos$region %in% c("northern africa", "sub-saharan africa"), "africa",
ifelse(datos$region %in% "oceania", "oceania", NA))))))
anova <- aov(population ~ area_sq_mi, data = datos)
summary(anova)
anova2 <- oneway.test(arable ~ crops, data = datos)
anova2 <- oneway.test(Arable ~ Crops, data = datos)
anova2 <- oneway.test(Arable(%) ~ Crops, data = datos)
anova2 <- oneway.test(Arable (%) ~ Crops (%), data = datos)
anova <- aov(population ~ area_sq_mi, data = datos)
summary(anova)
anova2 <- oneway.test(Arable(%) ~ Crops(%), data = datos)
names(datos)
anova2 <- oneway.test(Arable_percent ~ crops_percent, data = datos)
anova2 <- oneway.test(arable_percent ~ crops_percent, data = datos)
anova2 <- oneway.test(arable_percent ~ region_agrupada, data = datos)
anova2
anova3 <- oneway.test(crops_percent ~ region_agrupada, data = datos)
anova3
pnorm(2, mean = 5, sd=4)
pf(5.4068, df1=4, df2=83.)
pf(5.4068, df1=4, df2=83.12, lower.tail = FALSE)
by(datos$arable_percent, datos$region_agrupada, function(x){
qqnorm(x, pch=16)
qqline(x)
})
#anova2 <- oneway.test(arable_percent ~ region_agrupada, data = datos)
#anova2
anova2 <- kruskal.test(arable_percent ~ region_agrupada, data = datos)
anova2
by(datos$crops_percent, datos$region_agrupada, function(x){
qqnorm(x, pch=16)
qqline(x)
})
#anova3 <- oneway.test(crops_percent ~ region_agrupada, data = datos)
anova3 <- kruskal.test(crops_percent ~ region_agrupada, data = datos)
anova3
cfw
library(clickR)
#Arreglar los datos
datos <- cfw
datos <- fix_factors(datos, k=15)
datos <- fix_numerics(datos)
datos <- nice_names(datos)
table(datos$region)
descriptive(datos)
mean(datos$population[datos$region %in% "oceania"])
datos$region_agrupada <- factor(ifelse(datos$region %in% c("asia (ex. near east)", "near east", "c.w. of ind. states"), "asia",
ifelse(datos$region %in% c("western europe", "baltics", "eastern europe"), "europe",
ifelse(datos$region %in% c("latin amer. & carib", "northern america"), "america",
ifelse(datos$region %in% c("northern africa", "sub-saharan africa"), "africa",
ifelse(datos$region %in% "oceania", "oceania", NA))))))
anova <- aov(population ~ area_sq_mi, data = datos)
summary(anova)
#comparison normalidad
by(datos$arable_percent, datos$region_agrupada, function(x){
qqnorm(x, pch=16)
qqline(x)
})
by(datos$crops_percent, datos$region_agrupada, function(x){
qqnorm(x, pch=16)
qqline(x)
})
#comparison for crops in continent
names(datos)
#anova2 <- oneway.test(arable_percent ~ region_agrupada, data = datos)
#anova2
anova2 <- kruskal.test(arable_percent ~ region_agrupada, data = datos)
anova2
#anova3 <- oneway.test(crops_percent ~ region_agrupada, data = datos)
anova3 <- kruskal.test(crops_percent ~ region_agrupada, data = datos)
anova3
mpoceania <- mean(datos$population[datos$region %in% "oceania"])
mpasia <- mean(datos$population[datos$region_agrupada %in% "asia"])
mpafrica <- mean(datos$population[datos$region_agrupada %in% "africa"])
mpeurope <- mean(datos$population[datos$region_agrupada %in% "europe"])
mpamerica <- mean(datos$population[datos$region_agrupada %in% "america"])
dat1 <-sum(datos$arable_percent[datos$region_agrupada %in% "europe"])
dat1
datos$region_agrupada
datos$region_agrupada %in% "africa"
sum(datos$region_agrupada %in% "africa")
#d) Una persona lleva esperando ya 10 minutos y el autobús no ha pasado. ¿Cuál es la probabilidad de
#que pase en los próximos 5 minutos?
punif(15, min = 10, max = 25)
(punif(15, min=5, max=25) - punif(10, min=5, max=25))/(1-punif(10, min=5, max=25))  #P(A|B)/P(B)
pnorm(,20,5)
plot(seq(15, 45, 0.1), dnorm(seq(15, 45, 0.1), mean = 30, sd = 4), type="l", las=1, ylab="Densidad", xlab="X")
plot(seq(0, 30, 0.1), dnorm(seq(0, 30, 0.1), 15, 3), type="l", las=1)
comprobar_trienta <- function(){
seis_dados <- sample(1:6, 6, replace=TRUE)  #Es igual que arriba, lanzo dos dados
sum(seis_dados) > 22  #Comprueba si la suma de los cinco sean mayor de 30 o múltiplo de 5
}
comprobar_trienta()
repeticiones_dados5 <- replicate(100000, comprobar_trienta())
table(repeticiones_dados5)/100000
comprobar_trienta()
DAdrica <- (datos$population[datos$region_agrupada %in% "africa"])
Dafrica <- ifelse(is.na(DAdrica),0,DAdrica)
dat1 <-sum(datos$arable_percent[Dafrica])
dat1
dat1 <-mean(datos$arable_percent[Dafrica])
dat1
Dafrica
DAdrica <- (datos$arable_percent[datos$region_agrupada %in% "africa"])
Dafrica <- ifelse(is.na(DAdrica),0,DAdrica)
Dafrica
dat1 <-mean(datos$arable_percent[Dafrica])
dat1
dat1 <-sum(datos$arable_percent[Dafrica])/(datos$population[datos$region_agrupada %in% "africa"])
dat1
dat1 <-sum(datos$arable_percent[Dafrica])/(datos$population[datos$region_agrupada %in% "africa"])
dat1
dat1 <-sum(datos$arable_percent[Dafrica])/sum(datos$population[datos$region_agrupada %in% "africa"])
dat1 <-(datos$arable_percent[Dafrica])/(datos$population[datos$region_agrupada %in% "africa"])
table(mtcars$gear)
table(mtcars$gear)
barplot(table(mtcars$gear))
barplot(table(mtcars$gear),horiz=TRUE,xlab="frecuencia absoluta",col=rgb(150,90,90,maxColorValue = 255))
pie(table(mtcars$gear))
hist(mtcars$mpg,breaks = 15)
table(mtcars$gear)
barplot(table(mtcars$gear))
barplot(table(mtcars$gear),horiz=TRUE,xlab="frecuencia absoluta",col=rgb(150,90,90,maxColorValue = 255))
pie(table(mtcars$gear))
table(mtcars$gear)
barplot(table(mtcars$gear))
barplot(table(mtcars$gear),horiz=TRUE,xlab="frecuencia absoluta",col=rgb(150,90,90,maxColorValue = 255))
hist(mtcars$mpg,breaks = 15)
report(mtcars,file="tabla1")
library(repmod)
plot(mpg ~ hp,data=mtcars,pch=16,col="red")
plot(mpg ~ am,data=mtcars)
mtcars
boxplot(mtcars$mpg,xlab="miles per galon",horizontal = TRUE)
hist(mtcars$mpg,breaks = 15)
table(mtcars$gear)
barplot(table(mtcars$gear))
pie(table(mtcars$gear))
mtcars$gear
table(mtcars$gear)
pie(table(mtcars$gear))
summary(modelo1)
modelo1 <- lm(mpg ~ hp, data=mtcars)
summary(modelo1)
library(repmod)
install.packages(repmod)
install.packages("repmod")
library(repmod)
modelo1 <- lm(mpg ~ hp, data=mtcars)
summary(modelo1)
report(modelo1)
report(modelo1)
install.packages("remote")
remotes::install_github("David-hervas/repmod")
install.packages("repmod")
library(repmod)
report(modelo1)
summary(modelo1)
library(repmod)
modelo1 <- lm(mpg ~ hp, data=mtcars)
report(modelo1)
modelo1 <- lm(mpg ~ hp, data=mtcars)
summary(modelo1)
report(modelo1)
install.packages("remote")
remotes::install_github("David-hervas/repmod")
install.packages("remotes")
remotes::install_github("David-hervas/repmod")
